swagger: '2.0'
basePath: '/ga4gh/dos/v1'
info:
  title: Data Object Service
  version: 0.4.2
  description: https://github.com/ga4gh/data-object-service-schemas
  contact:
    name: David Steinberg
    email: davidcs@ucsc.edu
    x-role: responsible developer
  license:
    name: Apache 2.0
    url: https://raw.githubusercontent.com/ga4gh/data-object-service-schemas/master/LICENSE
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  '/service-info':
    get:
      summary: Returns service version and other information
      operationId: GetServiceInfo
      responses:
        '200':
          description: Service information returned successfully
          schema:
            $ref: '#/definitions/ServiceInfoResponse'
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
  /databundles:
    post:
      summary: Create a new Data Bundle
      operationId: CreateDataBundle
      responses:
        '200':
          description: The Data Bundle was successfully created.
          schema:
            $ref: '#/definitions/CreateDataBundleResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDataBundleRequest'
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
    get:
      summary: List the Data Bundles
      operationId: ListDataBundles
      responses:
        '200':
          description: 'Successfully listed Data Bundles.'
          schema:
            $ref: '#/definitions/ListDataBundlesResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: alias
          in: query
          type: string
          required: false
          description: |-
            If provided returns Data Bundles that have any alias that matches the
            request.
        - name: checksum
          in: query
          type: string
          required: false
          description: |-
            The hexlified checksum that one would like to match on.
        - name: checksum_type
          in: query
          type: string
          required: false
          description: |-
            If provided will restrict responses to those that match the provided
            type.

            possible values:
            md5                # most blob stores provide a checksum using this
            multipart-md5      # multipart uploads provide a specialized tag in S3
            sha256
            sha512
        - name: page_size
          in: query
          type: integer
          format: int32
          required: false
          description: |-
            Specifies the maximum number of results to return in a single page.
            If unspecified, a system default will be used.
        - name: page_token
          type: string
          in: query
          required: false
          description: |-
            The continuation token, which is used to page through large result sets.
            To get the next page of results, set this parameter to the value of
            `next_page_token` from the previous response.
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
  '/databundles/{data_bundle_id}':
    get:
      summary: Retrieve a Data Bundle
      operationId: GetDataBundle
      responses:
        '200':
          description: Successfully found the Data Bundle.
          schema:
            $ref: '#/definitions/GetDataBundleResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The requested Data Bundle wasn't found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: data_bundle_id
          in: path
          required: true
          type: string
        - name: version
          required: false
          description: |-
            If provided will return the requested version of the selected Data Bundle.
            Otherwise, only the latest version is returned.
          in: query
          type: string
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
    delete:
      summary: Delete a Data Bundle
      operationId: DeleteDataBundle
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/DeleteDataBundleResponse'
      parameters:
        - name: data_bundle_id
          in: path
          required: true
          type: string
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
    put:
      summary: Update a Data Bundle
      operationId: UpdateDataBundle
      responses:
        '200':
          description: The Data Bundle was updated successfully.
          schema:
            $ref: '#/definitions/UpdateDataBundleResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The requested Data Bundle wasn't found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: data_bundle_id
          in: path
          required: true
          type: string
          description: The ID of the Data Bundle to update
        - name: body
          in: body
          required: true
          description: The new content for the Data Bundle identified by the given data_bundle_id. If the ID specified in the request body is different than that specified in the path, the Data Bundle's ID will be replaced with the one in the request body.
          schema:
            $ref: '#/definitions/UpdateDataBundleRequest'
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
  '/databundles/{data_bundle_id}/versions':
    get:
      operationId: GetDataBundleVersions
      summary: Retrieve all versions of a Data Bundle
      responses:
        '200':
          description: The versions for the Data Bundle were found successfully.
          schema:
            $ref: '#/definitions/GetDataBundleVersionsResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The requested Data Bundle wasn't found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: data_bundle_id
          in: path
          required: true
          type: string
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
  /dataobjects:
    post:
      summary: Make a new Data Object
      operationId: CreateDataObject
      responses:
        '200':
          description: Successfully created the Data Object.
          schema:
            $ref: '#/definitions/CreateDataObjectResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: body
          in: body
          required: true
          description: |-
            The Data Object to be created. The ID scheme is left up to the
            implementor but should be unique to the server instance.
          schema:
            $ref: '#/definitions/CreateDataObjectRequest'
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
    get:
      summary: List the Data Objects
      operationId: ListDataObjects
      responses:
        '200':
          description: The Data Objects were listed successfully.
          schema:
            $ref: '#/definitions/ListDataObjectsResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: alias
          in: query
          type: string
          required: false
          description: |-
            If provided will only return Data Objects with the given alias.
        - name: url
          in: query
          type: string
          required: false
          description: |-
            If provided will return only Data Objects with a that URL matches
            this string.
        - name: checksum
          in: query
          type: string
          required: false
          description: |-
            The hexlified checksum that one would like to match on.
        - name: checksum_type
          in: query
          type: string
          required: false
          description: |-
            If provided will restrict responses to those that match the provided
            type.

            possible values:
            md5                # most blob stores provide a checksum using this
            multipart-md5      # multipart uploads provide a specialized tag in S3
            sha256
            sha512
        - name: page_size
          in: query
          type: integer
          format: int32
          required: false
          description: |-
            Specifies the maximum number of results to return in a single page.
            If unspecified, a system default will be used.
        - name: page_token
          in: query
          type: string
          required: false
          description: |-
            The continuation token, which is used to page through large result sets.
            To get the next page of results, set this parameter to the value of
            `next_page_token` from the previous response.
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
  '/dataobjects/{data_object_id}':
    get:
      summary: Retrieve a Data Object
      operationId: GetDataObject
      responses:
        '200':
          description: The Data Object was found successfully.
          schema:
            $ref: '#/definitions/GetDataObjectResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The requested Data Object wasn't found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: data_object_id
          in: path
          required: true
          type: string
        - name: version
          required: false
          description: |-
            If provided will return the requested version of the selected Data Object.
          in: query
          type: string
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
    delete:
      summary: Delete a Data Object index entry
      operationId: DeleteDataObject
      responses:
        '200':
          description: 'The Data Object was deleted successfully.'
          schema:
            $ref: '#/definitions/DeleteDataObjectResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The requested Data Object wasn't found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: data_object_id
          in: path
          required: true
          type: string
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
    put:
      summary: Update a Data Object
      operationId: UpdateDataObject
      responses:
        '200':
          description: The Data Object was successfully updated.
          schema:
            $ref: '#/definitions/UpdateDataObjectResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The requested Data Object wasn't found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: data_object_id
          in: path
          required: true
          type: string
          description: The ID of the Data Object to update
        - name: body
          in: body
          required: true
          description: The new Data Object for the given data_object_id. If the ID specified in the request body is different than that specified in the path, the Data Object's ID will be replaced with the one in the request body.
          schema:
            $ref: '#/definitions/UpdateDataObjectRequest'
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
  '/dataobjects/{data_object_id}/versions':
    get:
      summary: Retrieve all versions of a Data Object
      operationId: GetDataObjectVersions
      responses:
        '200':
          description: The versions for the Data Object were returned successfully.
          schema:
            $ref: '#/definitions/GetDataObjectVersionsResponse'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The requested Data Object wasn't found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/ErrorResponse'
      parameters:
        - name: data_object_id
          in: path
          required: true
          type: string
      tags:
        - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
definitions:
  SystemMetadata:
    type: object
    additionalProperties: true
    description: |-
            OPTIONAL
            These values are reported by the underlying object store.
            A set of key-value pairs that represent system metadata about the object.
  UserMetadata:
    type: object
    additionalProperties: true
    description: |-
            OPTIONAL
            A set of key-value pairs that represent metadata provided by the uploader.
  Checksum:
    type: object
    required: ['checksum']
    properties:
      checksum:
        type: string
        description: |-
          The hex-string encoded checksum for the Data.
      type:
        type: string
        description: |-
          The digest method used to create the checksum. If left unspecified md5
          will be assumed.

          possible values:
          md5                # most blob stores provide a checksum using this
          multipart-md5      # multipart uploads provide a specialized tag in S3
          sha256
          sha512
  CreateDataBundleRequest:
    type: object
    properties:
      data_bundle:
        $ref: '#/definitions/DataBundle'
  CreateDataBundleResponse:
    type: object
    required: ['data_bundle_id']
    properties:
      data_bundle_id:
        type: string
        description: |-
          The identifier of the Data Bundle created.
  CreateDataObjectRequest:
    type: object
    required: ['data_object']
    properties:
      data_object:
        $ref: '#/definitions/DataObject'
    description: |-
      The Data Object one would like to index. One must provide any aliases
      and URLs to this file when sending the CreateDataObjectRequest. It is up
      to implementations to validate that the Data Object is available from
      the provided URLs.
  CreateDataObjectResponse:
    type: object
    properties:
      data_object_id:
        type: string
        description: The ID of the created Data Object.
  DataBundle:
    type: object
    required: ['id', 'data_object_ids', 'created', 'updated', 'version', 'checksums']
    properties:
      id:
        type: string
        description: |-
          An identifier, unique to this Data Bundle
      data_object_ids:
        type: array
        items:
          type: string
        description: |-
          The list of Data Objects that this Data Bundle contains.
      created:
        type: string
        format: date-time
        description: |-
          Timestamp of object creation in RFC3339.
      updated:
        type: string
        format: date-time
        description: |-
          Timestamp of update in RFC3339, identical to create timestamp in systems
          that do not support updates.
      version:
        type: string
        description: |-
          A string representing a version, some systems may use checksum, a RFC3339
          timestamp, or incrementing version number. For systems that do not support
          versioning please use your update timestamp as your version.
      checksums:
        type: array
        items:
          $ref: '#/definitions/Checksum'
        description: |-
          At least one checksum must be provided.
          The Data Bundle checksum is computed over all the checksums of the
          Data Objects that bundle contains.
      description:
        type: string
        description: |-
          A human readable description.
      aliases:
        type: array
        items:
          type: string
        description: |-
          A list of strings that can be used to identify this Data Bundle.
      system_metadata:
        $ref: '#/definitions/SystemMetadata'
      user_metadata:
        $ref: '#/definitions/UserMetadata'
  DataObject:
    type: object
    required: ['id', 'size', 'created', 'checksums']
    properties:
      id:
        type: string
        description: |-
          An identifier unique to this Data Object.
      name:
        type: string
        description: |-
          A string that can be optionally used to name a Data Object.
      size:
        type: string
        format: int64
        description: |-
          The computed size in bytes.
      created:
        type: string
        format: date-time
        description: |-
          Timestamp of object creation in RFC3339.
      updated:
        type: string
        format: date-time
        description: |-
          Timestamp of update in RFC3339, identical to create timestamp in systems
          that do not support updates.
      version:
        type: string
        description: |-
          A string representing a version.
      mime_type:
        type: string
        description: |-
          A string providing the mime-type of the Data Object.
          For example, "application/json".
      checksums:
        type: array
        items:
          $ref: '#/definitions/Checksum'
        description: |-
          The checksum of the Data Object. At least one checksum must be provided.
      urls:
        type: array
        items:
          $ref: '#/definitions/URL'
        description: |-
          The list of URLs that can be used to access the Data Object.
      description:
        type: string
        description: |-
          A human readable description of the contents of the Data Object.
      aliases:
        type: array
        items:
          type: string
        description: |-
          A list of strings that can be used to find this Data Object.
          These aliases can be used to represent the Data Object's location in
          a directory (e.g. "bucket/folder/file.name") to make Data Objects
          more discoverable. They might also be used to represent
  DeleteDataBundleResponse:
    type: object
    properties:
      data_bundle_id:
        type: string
  DeleteDataObjectResponse:
    type: object
    required: ['data_object_id']
    properties:
      data_object_id:
        type: string
        description: |-
          The identifier of the Data Object deleted.
  GetDataBundleResponse:
    type: object
    properties:
      data_bundle:
        $ref: '#/definitions/DataBundle'
  GetDataBundleVersionsResponse:
    type: object
    required: ['data_bundles']
    properties:
      data_bundles:
        type: array
        items:
          $ref: '#/definitions/DataBundle'
        description: |-
          All versions of the Data Bundles that match the GetDataBundleVersions
          request.
  GetDataObjectResponse:
    type: object
    required: ['data_object']
    properties:
      data_object:
        $ref: '#/definitions/DataObject'
  GetDataObjectVersionsResponse:
    type: object
    required: ['data_objects']
    properties:
      data_objects:
        type: array
        items:
          $ref: '#/definitions/DataObject'
        description: |-
          All versions of the Data Objects that match the GetDataObjectVersions
          request.
  ListDataBundlesRequest:
    description: |-
      Only return Data Bundles that match all of the request parameters. A
      page_size and page_token are provided for retrieving a large number of
      results.
    type: object
    properties:
      alias:
        type: string
        description: |-
          If provided returns Data Bundles that have any alias that matches the
          request.
      checksum:
        type: string
        description: |-
          The hexlified checksum that one would like to match on.
      checksum_type:
        type: string
        description: |-
          If provided will restrict responses to those that match the provided
          type.

          possible values:
          md5                # most blob stores provide a checksum using this
          multipart-md5      # multipart uploads provide a specialized tag in S3
          sha256
          sha512
      page_size:
        type: integer
        format: int32
        description: |-
          Specifies the maximum number of results to return in a single page.
          If unspecified, a system default will be used.
      page_token:
        type: string
        description: |-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `next_page_token` from the previous response.
  ListDataBundlesResponse:
    type: object
    description: |-
      A list of Data Bundles matching the request parameters and a continuation
      token that can be used to retrieve more results.
    properties:
      data_bundles:
        type: array
        items:
          $ref: '#/definitions/DataBundle'
        description: The list of Data Bundles.
      next_page_token:
        type: string
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
  ListDataObjectsRequest:
    type: object
    properties:
      alias:
        type: string
        description: |-
          If provided will only return Data Objects with the given alias.
      url:
        type: string
        description: |-
          If provided will return only Data Objects with a that URL matches
          this string.
      checksum:
        type: string
        description: |-
          The hexlified checksum that one would like to match on.
      checksum_type:
        type: string
        description: |-
          If provided will restrict responses to those that match the provided
          type.

          possible values:
          md5                # most blob stores provide a checksum using this
          multipart-md5      # multipart uploads provide a specialized tag in S3
          sha256
          sha512
      page_size:
        type: integer
        format: int32
        description: |-
          Specifies the maximum number of results to return in a single page.
          If unspecified, a system default will be used.
      page_token:
        type: string
        description: |-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `next_page_token` from the previous response.
    description: |-
      Allows a requester to list and filter Data Objects. Only Data Objects
      matching all of the requested parameters will be returned.
  ListDataObjectsResponse:
    type: object
    properties:
      data_objects:
        type: array
        items:
          $ref: '#/definitions/DataObject'
        description: The list of Data Objects.
      next_page_token:
        type: string
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
    description:  |-
      A list of Data Objects matching the requested parameters, and a paging
      token, that can be used to retrieve more results.
  URL:
    type: object
    required: ['url']
    properties:
      url:
        type: string
        description: |-
          A URL that can be used to access the file.
      system_metadata:
        $ref: '#/definitions/SystemMetadata'
      user_metadata:
        $ref: '#/definitions/UserMetadata'
  UpdateDataBundleRequest:
    type: object
    required: ['data_bundle']
    properties:
      data_bundle:
        $ref: '#/definitions/DataBundle'
  UpdateDataBundleResponse:
    type: object
    required: ['data_bundle_id']
    properties:
      data_bundle_id:
        type: string
        description: |-
          The identifier of the Data Bundle updated.
  UpdateDataObjectRequest:
    type: object
    required: ['data_object']
    properties:
      data_object:
        $ref: '#/definitions/DataObject'
  UpdateDataObjectResponse:
    type: object
    required: ['data_object_id']
    properties:
      data_object_id:
        type: string
        description: |-
          The identifier of the Data Object updated.
  ErrorResponse:
    description:
      An object that can optionally include information about the error.
    type: object
    properties:
      msg:
        type: string
        description: A detailed error message.
      status_code:
        type: integer
        description: The integer representing the HTTP status code (e.g. 200, 404).
  ServiceInfoResponse:
    type: object
    required: ['version']
    description: Placeholder for the Info Object
    properties:
      version:
        type: string
        description: Service version
      title:
        type: string
        description: Service name
      description:
        type: string
        description: Service description
      contact:
        type: object
        description: Maintainer contact info
      license:
        type: object
        description: License information for the exposed API
