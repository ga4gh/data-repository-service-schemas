swagger: '2.0'
basePath: '/ga4gh/drs/v1'
info:
  title: Data Repository Service
  version: 0.1.0
  description: https://github.com/ga4gh/data-repository-service-schemas
  contact:
    name: GA4GH Cloud Work Stream
    email: ga4gh-cloud@ga4gh.org
    x-role: responsible developer
  license:
    name: Apache 2.0
    url: https://raw.githubusercontent.com/ga4gh/data-repository-service-schemas/master/LICENSE
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
security:
  - {}
  - authToken: []
paths:
  '/service-info':
    get:
      summary: Returns service version and other information
      operationId: GetServiceInfo
      responses:
        '200':
          description: Service information returned successfully
          schema:
            $ref: '#/definitions/ServiceInfo'
      tags:
        - DataRepositoryService
      x-swagger-router-controller: ga4gh.drs.server
  '/bundles/{bundle_id}':
    get:
      summary: Retrieve a Data Bundle
      operationId: GetBundle
      responses:
        '200':
          description: Successfully found the Data Bundle.
          schema:
            $ref: '#/definitions/Bundle'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: The requested Data Bundle wasn't found.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: bundle_id
          in: path
          required: true
          type: string
      tags:
        - DataRepositoryService
      x-swagger-router-controller: ga4gh.drs.server
  '/objects/{object_id}':
    get:
      summary: Retrieve a Data Object
      operationId: GetObject
      responses:
        '200':
          description: The Data Object was found successfully.
          schema:
            $ref: '#/definitions/Object'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: The requested Data Object wasn't found
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: object_id
          in: path
          required: true
          type: string
      tags:
        - DataRepositoryService
      x-swagger-router-controller: ga4gh.drs.server
  '/objects/{object_id}/access/{access_id}':
    get:
      summary: Returns a fully resolvable URL that can be used to fetch the actual object bytes.
      operationId: GetAccessURL
      responses:
        '200':
          description: The access URL was found successfully.
          schema:
            $ref: '#/definitions/AccessURL'
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: The requested access URL wasn't found
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: object_id
          in: path
          required: true
          type: string
        - name: access_id
          in: path
          required: true
          type: string
          description: An 'access_id' from 'access_methods' list of a Data Object
      tags:
        - DataRepositoryService
      x-swagger-router-controller: ga4gh.drs.server
securityDefinitions:
  authToken:
    description: |
      A valid authorization token must be passed in the 'Authorization' header.
      Example syntax for using 'Authorization' header :
        Bearer: token_string
    type: apiKey
    name: Authorization
    in: header
definitions:
  SystemMetadata:
    type: object
    additionalProperties: true
    description: |-
            OPTIONAL
            These values are reported by the underlying object store.
            A set of key-value pairs that represent system metadata about the object.
  UserMetadata:
    type: object
    additionalProperties: true
    description: |-
            OPTIONAL
            A set of key-value pairs that represent metadata provided by the uploader.
  Checksum:
    type: object
    required: ['checksum']
    properties:
      checksum:
        type: string
        description: |-
          The hex-string encoded checksum for the Data.
      type:
        type: string
        description: |-
          The digest method used to create the checksum. If left unspecified md5
          will be assumed.

          possible values:
          md5                # most blob stores provide a checksum using this
          multipart-md5      # multipart uploads provide a specialized tag in S3
          sha256
          sha512
  Bundle:
    type: object
    required: ['id', 'object_ids', 'created', 'updated', 'version', 'checksums']
    properties:
      id:
        type: string
        description: |-
          An identifier, unique to this Data Bundle
      object_ids:
        type: array
        items:
          type: string
        description: |-
          The list of Data Objects that this Data Bundle contains.
      created:
        type: string
        format: date-time
        description: |-
          Timestamp of object creation in RFC3339.
      updated:
        type: string
        format: date-time
        description: |-
          Timestamp of update in RFC3339, identical to create timestamp in systems
          that do not support updates.
      version:
        type: string
        description: |-
          A string representing a version, some systems may use checksum, a RFC3339
          timestamp, or incrementing version number. For systems that do not support
          versioning please use your update timestamp as your version.
      checksums:
        type: array
        items:
          $ref: '#/definitions/Checksum'
        description: |-
          At least one checksum must be provided.
          The Data Bundle checksum is computed over all the checksums of the
          Data Objects that bundle contains.
      description:
        type: string
        description: |-
          A human readable description.
      aliases:
        type: array
        items:
          type: string
        description: |-
          A list of strings that can be used to identify this Data Bundle.
      system_metadata:
        $ref: '#/definitions/SystemMetadata'
      user_metadata:
        $ref: '#/definitions/UserMetadata'
  Object:
    type: object
    required: ['id', 'size', 'created', 'checksums', 'access_methods']
    properties:
      id:
        type: string
        description: |-
          An identifier unique to this Data Object.
      name:
        type: string
        description: |-
          A string that can be optionally used to name a Data Object.
      size:
        type: string
        format: int64
        description: |-
          The computed size in bytes.
      created:
        type: string
        format: date-time
        description: |-
          Timestamp of object creation in RFC3339.
      updated:
        type: string
        format: date-time
        description: |-
          Timestamp of update in RFC3339, identical to create timestamp in systems
          that do not support updates.
      version:
        type: string
        description: |-
          A string representing a version.
      mime_type:
        type: string
        description: |-
          A string providing the mime-type of the Data Object.
          For example, "application/json".
      checksums:
        type: array
        items:
          $ref: '#/definitions/Checksum'
        description: |-
          The checksum of the Data Object. At least one checksum must be provided.
      access_methods:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/AccessMethod'
        description: |-
          The list of access methods that can be used to access the Data Object.
      description:
        type: string
        description: |-
          A human readable description of the contents of the Data Object.
      aliases:
        type: array
        items:
          type: string
        description: |-
          A list of strings that can be used to find this Data Object.
          These aliases can be used to represent the Data Object's location in
          a directory (e.g. "bucket/folder/file.name") to make Data Objects
          more discoverable. They might also be used to represent

  AccessURL:
    type: object
    required: ['access_url']
    properties:
      access_url:
        type: string
        description: A fully resolvable access_url that can be used to fetch the actual object bytes.
  AccessMethod:
    type: object
    required:
      - type
    properties:
      type:
        type: string
        enum:
        - s3
        - gs
        - ftp
        - sftp
        - http
        - https
        - nfs
        - globus
        - aspera
        - gsiftp
        - local
        description: >-
          Type of the access method.
      access_url:
        type: string
        description: >-
          A fully resolvable URL string that can be used to fetch the actual object bytes.
          Note that at least one of access_url and access_id must be provided.
      access_id:
        type: string
        description: >-
          An arbitrary string to be passed to the /access path to fetch an access_url.
          This must be unique per object.
          Note that at least one of access_url and access_id must be provided.
      region:
        type: string
        description: >-
          OPTIONAL
          Name of the region in the cloud service provider that the object belongs to.
        example:
          us-east-1
  Error:
    description:
      An object that can optionally include information about the error.
    type: object
    properties:
      msg:
        type: string
        description: A detailed error message.
      status_code:
        type: integer
        description: The integer representing the HTTP status code (e.g. 200, 404).
  ServiceInfo:
    type: object
    required: ['version']
    description: Placeholder for the Info Object
    properties:
      version:
        type: string
        description: Service version
      title:
        type: string
        description: Service name
      description:
        type: string
        description: Service description
      contact:
        type: object
        description: Maintainer contact info
      license:
        type: object
        description: License information for the exposed API
