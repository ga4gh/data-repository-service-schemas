components:
  schemas:
    Checksum:
      properties:
        checksum:
          description: The hex-string encoded checksum for the Data.
          type: string
        type:
          description: 'The digest method used to create the checksum. If left unspecified
            md5

            will be assumed.


            possible values:

            md5                # most blob stores provide a checksum using this

            multipart-md5      # multipart uploads provide a specialized tag in S3

            sha256

            sha512'
          type: string
      required:
      - checksum
      type: object
    CreateDataBundleRequest:
      properties:
        data_bundle:
          $ref: '#/components/schemas/DataBundle'
      type: object
    CreateDataBundleResponse:
      properties:
        data_bundle_id:
          description: The identifier of the Data Bundle created.
          type: string
      required:
      - data_bundle_id
      type: object
    CreateDataObjectRequest:
      description: 'The Data Object one would like to index. One must provide any
        aliases

        and URLs to this file when sending the CreateDataObjectRequest. It is up

        to implementations to validate that the Data Object is available from

        the provided URLs.'
      properties:
        data_object:
          $ref: '#/components/schemas/DataObject'
      required:
      - data_object
      type: object
    CreateDataObjectResponse:
      properties:
        data_object_id:
          description: The ID of the created Data Object.
          type: string
      type: object
    DataBundle:
      properties:
        aliases:
          description: A list of strings that can be used to identify this Data Bundle.
          items:
            type: string
          type: array
        checksums:
          description: 'At least one checksum must be provided.

            The Data Bundle checksum is computed over all the checksums of the

            Data Objects that bundle contains.'
          items:
            $ref: '#/components/schemas/Checksum'
          type: array
        created:
          description: Timestamp of object creation in RFC3339.
          format: date-time
          type: string
        data_object_ids:
          description: The list of Data Objects that this Data Bundle contains.
          items:
            type: string
          type: array
        description:
          description: A human readable description.
          type: string
        id:
          description: An identifier, unique to this Data Bundle
          type: string
        system_metadata:
          $ref: '#/components/schemas/SystemMetadata'
        updated:
          description: 'Timestamp of update in RFC3339, identical to create timestamp
            in systems

            that do not support updates.'
          format: date-time
          type: string
        user_metadata:
          $ref: '#/components/schemas/UserMetadata'
        version:
          description: 'A string representing a version, some systems may use checksum,
            a RFC3339

            timestamp, or incrementing version number. For systems that do not support

            versioning please use your update timestamp as your version.'
          type: string
      required:
      - id
      - data_object_ids
      - created
      - updated
      - version
      - checksums
      type: object
    DataObject:
      properties:
        aliases:
          description: 'A list of strings that can be used to find this Data Object.

            These aliases can be used to represent the Data Object''s location in

            a directory (e.g. "bucket/folder/file.name") to make Data Objects

            more discoverable. They might also be used to represent'
          items:
            type: string
          type: array
        checksums:
          description: The checksum of the Data Object. At least one checksum must
            be provided.
          items:
            $ref: '#/components/schemas/Checksum'
          type: array
        created:
          description: Timestamp of object creation in RFC3339.
          format: date-time
          type: string
        description:
          description: A human readable description of the contents of the Data Object.
          type: string
        id:
          description: An identifier unique to this Data Object.
          type: string
        mime_type:
          description: 'A string providing the mime-type of the Data Object.

            For example, "application/json".'
          type: string
        name:
          description: A string that can be optionally used to name a Data Object.
          type: string
        size:
          description: The computed size in bytes.
          format: int64
          type: string
        updated:
          description: 'Timestamp of update in RFC3339, identical to create timestamp
            in systems

            that do not support updates.'
          format: date-time
          type: string
        urls:
          description: The list of URLs that can be used to access the Data Object.
          items:
            $ref: '#/components/schemas/URL'
          type: array
        version:
          description: A string representing a version.
          type: string
      required:
      - id
      - size
      - created
      - checksums
      type: object
    DeleteDataBundleResponse:
      properties:
        data_bundle_id:
          type: string
      type: object
    DeleteDataObjectResponse:
      properties:
        data_object_id:
          description: The identifier of the Data Object deleted.
          type: string
      required:
      - data_object_id
      type: object
    ErrorResponse:
      description: An object that can optionally include information about the error.
      properties:
        msg:
          description: A detailed error message.
          type: string
        status_code:
          description: The integer representing the HTTP status code (e.g. 200, 404).
          type: integer
      type: object
    GetDataBundleResponse:
      properties:
        data_bundle:
          $ref: '#/components/schemas/DataBundle'
      type: object
    GetDataBundleVersionsResponse:
      properties:
        data_bundles:
          description: 'All versions of the Data Bundles that match the GetDataBundleVersions

            request.'
          items:
            $ref: '#/components/schemas/DataBundle'
          type: array
      required:
      - data_bundles
      type: object
    GetDataObjectResponse:
      properties:
        data_object:
          $ref: '#/components/schemas/DataObject'
      required:
      - data_object
      type: object
    GetDataObjectVersionsResponse:
      properties:
        data_objects:
          description: 'All versions of the Data Objects that match the GetDataObjectVersions

            request.'
          items:
            $ref: '#/components/schemas/DataObject'
          type: array
      required:
      - data_objects
      type: object
    ListDataBundlesRequest:
      description: 'Only return Data Bundles that match all of the request parameters.
        A

        page_size and page_token are provided for retrieving a large number of

        results.'
      properties:
        alias:
          description: 'If provided returns Data Bundles that have any alias that
            matches the

            request.'
          type: string
        checksum:
          description: The hexlified checksum that one would like to match on.
          type: string
        checksum_type:
          description: 'If provided will restrict responses to those that match the
            provided

            type.


            possible values:

            md5                # most blob stores provide a checksum using this

            multipart-md5      # multipart uploads provide a specialized tag in S3

            sha256

            sha512'
          type: string
        page_size:
          description: 'Specifies the maximum number of results to return in a single
            page.

            If unspecified, a system default will be used.'
          format: int32
          type: integer
        page_token:
          description: 'The continuation token, which is used to page through large
            result sets.

            To get the next page of results, set this parameter to the value of

            `next_page_token` from the previous response.'
          type: string
      type: object
    ListDataBundlesResponse:
      description: 'A list of Data Bundles matching the request parameters and a continuation

        token that can be used to retrieve more results.'
      properties:
        data_bundles:
          description: The list of Data Bundles.
          items:
            $ref: '#/components/schemas/DataBundle'
          type: array
        next_page_token:
          description: 'The continuation token, which is used to page through large
            result sets.

            Provide this value in a subsequent request to return the next page of

            results. This field will be empty if there aren''t any additional results.'
          type: string
      type: object
    ListDataObjectsRequest:
      description: 'Allows a requester to list and filter Data Objects. Only Data
        Objects

        matching all of the requested parameters will be returned.'
      properties:
        alias:
          description: If provided will only return Data Objects with the given alias.
          type: string
        checksum:
          description: The hexlified checksum that one would like to match on.
          type: string
        checksum_type:
          description: 'If provided will restrict responses to those that match the
            provided

            type.


            possible values:

            md5                # most blob stores provide a checksum using this

            multipart-md5      # multipart uploads provide a specialized tag in S3

            sha256

            sha512'
          type: string
        page_size:
          description: 'Specifies the maximum number of results to return in a single
            page.

            If unspecified, a system default will be used.'
          format: int32
          type: integer
        page_token:
          description: 'The continuation token, which is used to page through large
            result sets.

            To get the next page of results, set this parameter to the value of

            `next_page_token` from the previous response.'
          type: string
        url:
          description: 'If provided will return only Data Objects with a that URL
            matches

            this string.'
          type: string
      type: object
    ListDataObjectsResponse:
      description: 'A list of Data Objects matching the requested parameters, and
        a paging

        token, that can be used to retrieve more results.'
      properties:
        data_objects:
          description: The list of Data Objects.
          items:
            $ref: '#/components/schemas/DataObject'
          type: array
        next_page_token:
          description: 'The continuation token, which is used to page through large
            result sets.

            Provide this value in a subsequent request to return the next page of

            results. This field will be empty if there aren''t any additional results.'
          type: string
      type: object
    ServiceInfoResponse:
      description: Placeholder for the Info Object
      properties:
        contact:
          description: Maintainer contact info
          type: object
        description:
          description: Service description
          type: string
        license:
          description: License information for the exposed API
          type: object
        title:
          description: Service name
          type: string
        version:
          description: Service version
          type: string
      required:
      - version
      type: object
    SystemMetadata:
      additionalProperties: true
      description: 'OPTIONAL

        These values are reported by the underlying object store.

        A set of key-value pairs that represent system metadata about the object.'
      type: object
    URL:
      properties:
        system_metadata:
          $ref: '#/components/schemas/SystemMetadata'
        url:
          description: A URL that can be used to access the file.
          type: string
        user_metadata:
          $ref: '#/components/schemas/UserMetadata'
      required:
      - url
      type: object
    UpdateDataBundleRequest:
      properties:
        data_bundle:
          $ref: '#/components/schemas/DataBundle'
      required:
      - data_bundle
      type: object
    UpdateDataBundleResponse:
      properties:
        data_bundle_id:
          description: The identifier of the Data Bundle updated.
          type: string
      required:
      - data_bundle_id
      type: object
    UpdateDataObjectRequest:
      properties:
        data_object:
          $ref: '#/components/schemas/DataObject'
      required:
      - data_object
      type: object
    UpdateDataObjectResponse:
      properties:
        data_object_id:
          description: The identifier of the Data Object updated.
          type: string
      required:
      - data_object_id
      type: object
    UserMetadata:
      additionalProperties: true
      description: 'OPTIONAL

        A set of key-value pairs that represent metadata provided by the uploader.'
      type: object
info:
  contact:
    email: davidcs@ucsc.edu
    name: David Steinberg
    x-role: responsible developer
  description: https://github.com/ga4gh/data-object-service-schemas
  license:
    name: Apache 2.0
    url: https://raw.githubusercontent.com/ga4gh/data-object-service-schemas/master/LICENSE
  termsOfService: https://www.ga4gh.org/policies/termsandconditions.html
  title: Data Object Service
  version: 0.4.2
  x-implementationLanguage: en
openapi: 3.0.0
paths:
  /databundles:
    get:
      operationId: ListDataBundles
      parameters:
      - description: 'If provided returns Data Bundles that have any alias that matches
          the

          request.'
        in: query
        name: alias
        required: false
        schema:
          type: string
      - description: The hexlified checksum that one would like to match on.
        in: query
        name: checksum
        required: false
        schema:
          type: string
      - description: 'If provided will restrict responses to those that match the
          provided

          type.


          possible values:

          md5                # most blob stores provide a checksum using this

          multipart-md5      # multipart uploads provide a specialized tag in S3

          sha256

          sha512'
        in: query
        name: checksum_type
        required: false
        schema:
          type: string
      - description: 'Specifies the maximum number of results to return in a single
          page.

          If unspecified, a system default will be used.'
        in: query
        name: page_size
        required: false
        schema:
          format: int32
          type: integer
      - description: 'The continuation token, which is used to page through large
          result sets.

          To get the next page of results, set this parameter to the value of

          `next_page_token` from the previous response.'
        in: query
        name: page_token
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataBundlesResponse'
          description: Successfully listed Data Bundles.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is malformed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is unauthorized.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requester is not authorized to perform this action.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error occurred.
      summary: List the Data Bundles
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
    post:
      operationId: CreateDataBundle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataBundleRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataBundleResponse'
          description: The Data Bundle was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is malformed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is unauthorized.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requester is not authorized to perform this action.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error occurred.
      summary: Create a new Data Bundle
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
  /databundles/{data_bundle_id}:
    delete:
      operationId: DeleteDataBundle
      parameters:
      - in: path
        name: data_bundle_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataBundleResponse'
          description: ''
      summary: Delete a Data Bundle
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
    get:
      operationId: GetDataBundle
      parameters:
      - in: path
        name: data_bundle_id
        required: true
        schema:
          type: string
      - description: 'If provided will return the requested version of the selected
          Data Bundle.

          Otherwise, only the latest version is returned.'
        in: query
        name: version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataBundleResponse'
          description: Successfully found the Data Bundle.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is malformed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is unauthorized.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requester is not authorized to perform this action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requested Data Bundle wasn't found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error occurred.
      summary: Retrieve a Data Bundle
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
    put:
      operationId: UpdateDataBundle
      parameters:
      - description: The ID of the Data Bundle to update
        in: path
        name: data_bundle_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataBundleRequest'
        description: The new content for the Data Bundle identified by the given data_bundle_id.
          If the ID specified in the request body is different than that specified
          in the path, the Data Bundle's ID will be replaced with the one in the request
          body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataBundleResponse'
          description: The Data Bundle was updated successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is malformed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is unauthorized.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requester is not authorized to perform this action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requested Data Bundle wasn't found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error occurred.
      summary: Update a Data Bundle
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
  /databundles/{data_bundle_id}/versions:
    get:
      operationId: GetDataBundleVersions
      parameters:
      - in: path
        name: data_bundle_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataBundleVersionsResponse'
          description: The versions for the Data Bundle were found successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is malformed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is unauthorized.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requester is not authorized to perform this action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requested Data Bundle wasn't found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error occurred.
      summary: Retrieve all versions of a Data Bundle
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
  /dataobjects:
    get:
      operationId: ListDataObjects
      parameters:
      - description: If provided will only return Data Objects with the given alias.
        in: query
        name: alias
        required: false
        schema:
          type: string
      - description: 'If provided will return only Data Objects with a that URL matches

          this string.'
        in: query
        name: url
        required: false
        schema:
          type: string
      - description: The hexlified checksum that one would like to match on.
        in: query
        name: checksum
        required: false
        schema:
          type: string
      - description: 'If provided will restrict responses to those that match the
          provided

          type.


          possible values:

          md5                # most blob stores provide a checksum using this

          multipart-md5      # multipart uploads provide a specialized tag in S3

          sha256

          sha512'
        in: query
        name: checksum_type
        required: false
        schema:
          type: string
      - description: 'Specifies the maximum number of results to return in a single
          page.

          If unspecified, a system default will be used.'
        in: query
        name: page_size
        required: false
        schema:
          format: int32
          type: integer
      - description: 'The continuation token, which is used to page through large
          result sets.

          To get the next page of results, set this parameter to the value of

          `next_page_token` from the previous response.'
        in: query
        name: page_token
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataObjectsResponse'
          description: The Data Objects were listed successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is malformed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is unauthorized.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requester is not authorized to perform this action.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error occurred.
      summary: List the Data Objects
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
    post:
      operationId: CreateDataObject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataObjectRequest'
        description: 'The Data Object to be created. The ID scheme is left up to the

          implementor but should be unique to the server instance.'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataObjectResponse'
          description: Successfully created the Data Object.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is malformed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is unauthorized.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requester is not authorized to perform this action.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error occurred.
      summary: Make a new Data Object
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
  /dataobjects/{data_object_id}:
    delete:
      operationId: DeleteDataObject
      parameters:
      - in: path
        name: data_object_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataObjectResponse'
          description: The Data Object was deleted successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is malformed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is unauthorized.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requester is not authorized to perform this action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requested Data Object wasn't found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error occurred.
      summary: Delete a Data Object index entry
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
    get:
      operationId: GetDataObject
      parameters:
      - in: path
        name: data_object_id
        required: true
        schema:
          type: string
      - description: If provided will return the requested version of the selected
          Data Object.
        in: query
        name: version
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataObjectResponse'
          description: The Data Object was found successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is malformed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is unauthorized.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requester is not authorized to perform this action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requested Data Object wasn't found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error occurred.
      summary: Retrieve a Data Object
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
    put:
      operationId: UpdateDataObject
      parameters:
      - description: The ID of the Data Object to update
        in: path
        name: data_object_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataObjectRequest'
        description: The new Data Object for the given data_object_id. If the ID specified
          in the request body is different than that specified in the path, the Data
          Object's ID will be replaced with the one in the request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDataObjectResponse'
          description: The Data Object was successfully updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is malformed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is unauthorized.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requester is not authorized to perform this action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requested Data Object wasn't found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error occurred.
      summary: Update a Data Object
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
  /dataobjects/{data_object_id}/versions:
    get:
      operationId: GetDataObjectVersions
      parameters:
      - in: path
        name: data_object_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataObjectVersionsResponse'
          description: The versions for the Data Object were returned successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is malformed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request is unauthorized.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requester is not authorized to perform this action.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The requested Data Object wasn't found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: An unexpected error occurred.
      summary: Retrieve all versions of a Data Object
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
  /service-info:
    get:
      operationId: GetServiceInfo
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfoResponse'
          description: Service information returned successfully
      summary: Returns service version and other information
      tags:
      - DataObjectService
      x-swagger-router-controller: ga4gh.dos.server
servers:
- url: https://dataguids.org/ga4gh/dos/v1
tags:
- name: NIHdatacommons
